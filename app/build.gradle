apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.weatherapp.weatherapp"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField "boolean", "ENABLE_LOGS", "true"
            buildConfigField 'String', 'BASE_API_ENDPOINT', '"http://api.openweathermap.org/data/2.5/forecast/"'
            buildConfigField 'String', 'OPENWEATHER_API_KEY', '"a0902dd1f56ef7c6fe785a3acd9e08e5"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            buildConfigField "boolean", "ENABLE_LOGS", "false"
            buildConfigField 'String', 'BASE_API_ENDPOINT', '"http://api.openweathermap.org/data/2.5/forecast/"'
            buildConfigField 'String', 'OPENWEATHER_API_KEY', '"a0902dd1f56ef7c6fe785a3acd9e08e5"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
}

ext {
    SUPPORT_LIBRARY_VERSION = '25.0.0'
    JUNIT_VERSION = '4.12'
    MOCKITO_VERSION = '1.10.19'
    OKHTTP_VERSION = '3.4.2'
    RETROFIT_VERSION = '2.1.0'
    LOGANSQUARE_VERSION = '1.3.6'
    LOGANSQUARE_RETROFIT_CONVERTER_VERSION = '1.4.1'
    DAGGER_VERSION ='2.4'
    BUTTERKNIFE_VERSION = '8.4.0'
    RX_JAVA_VERSION = '1.1.9'
    RX_ANDROID_VERSION = '1.2.1'
    RX_PROGUARD_RULES_VERSION = '1.1.9.0'
    RX_RETROFIT_ADAPTER_VERSION = '2.1.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // android support libraries
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"

    // tests
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"

    // okhttp - HTTP+HTTP/2 client for Android and Java applications. See https://github.com/square/okhttp
    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    testCompile "com.squareup.okhttp3:mockwebserver:$OKHTTP_VERSION" // to mock server failures

    // logansquare - Screaming fast JSON parsing and serialization library for Android. https://github.com/bluelinelabs/LoganSquare
    compile "com.bluelinelabs:logansquare:$LOGANSQUARE_VERSION"
    annotationProcessor "com.bluelinelabs:logansquare-compiler:$LOGANSQUARE_VERSION"

    // retrofit2 - type-safe HTTP client. See https://square.github.io/retrofit/
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.github.aurae.retrofit2:converter-logansquare:$LOGANSQUARE_RETROFIT_CONVERTER_VERSION"

    // Batterknife - Bind Android views and callbacks to fields and methods. http://jakewharton.github.io/butterknife/
    // Warning: apt command  rom the android-apt plugin was used in android studio < 2.2
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // Rx
    compile "io.reactivex:rxjava:$RX_JAVA_VERSION"
    compile "io.reactivex:rxandroid:$RX_ANDROID_VERSION"
    compile "com.artemzin.rxjava:proguard-rules:$RX_PROGUARD_RULES_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RX_RETROFIT_ADAPTER_VERSION"

    // Dagger2 - fully static compilation-time dependency injection framework. See https://google.github.io/dagger/
    // Warning: apt command from the android-apt plugin was used in android studio < 2.2
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"




}
